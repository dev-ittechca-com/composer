{"version":3,"file":"common.js","mappings":"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","sources":["webpack://phpmyadmin/./js/src/common.js"],"sourcesContent":["\n$(function () {\n    Functions.checkNumberOfFields();\n});\n\n/**\n * Holds common parameters such as server, db, table, etc\n *\n * The content for this is normally loaded from Header.php or\n * Response.php and executed by ajax.js\n *\n * @test-module CommonParams\n */\nvar CommonParams = (function () {\n    /**\n     * @var {Object} params An associative array of key value pairs\n     * @access private\n     */\n    var params = {};\n    // The returned object is the public part of the module\n    return {\n        /**\n         * Saves all the key value pair that\n         * are provided in the input array\n         *\n         * @param obj hash The input array\n         *\n         * @return {void}\n         */\n        setAll: function (obj) {\n            var updateNavigation = false;\n            for (var i in obj) {\n                if (params[i] !== undefined && params[i] !== obj[i]) {\n                    if (i === 'db' || i === 'table') {\n                        updateNavigation = true;\n                    }\n                }\n                params[i] = obj[i];\n            }\n            if (updateNavigation &&\n                    $('#pma_navigation_tree').hasClass('synced')\n            ) {\n                Navigation.showCurrent();\n            }\n        },\n        /**\n         * Retrieves a value given its key\n         * Returns empty string for undefined values\n         *\n         * @param {string} name The key\n         *\n         * @return {string}\n         */\n        get: function (name) {\n            return params[name];\n        },\n        /**\n         * Saves a single key value pair\n         *\n         * @param {string} name  The key\n         * @param {string} value The value\n         *\n         * @return {CommonParams} For chainability\n         */\n        set: function (name, value) {\n            var updateNavigation = false;\n            if (name === 'db' || name === 'table' &&\n                params[name] !== value\n            ) {\n                updateNavigation = true;\n            }\n            params[name] = value;\n            if (updateNavigation &&\n                    $('#pma_navigation_tree').hasClass('synced')\n            ) {\n                Navigation.showCurrent();\n            }\n            return this;\n        },\n        /**\n         * Returns the url query string using the saved parameters\n         *\n         * @param {string} separator New separator\n         *\n         * @return {string}\n         */\n        getUrlQuery: function (separator) {\n            var sep = (typeof separator !== 'undefined') ? separator : '?';\n            var common = this.get('common_query');\n            var argsep = CommonParams.get('arg_separator');\n            if (typeof common === 'string' && common.length > 0) {\n                // If the last char is the separator, do not add it\n                // Else add it\n                common = common.endsWith(argsep) ? common : common + argsep;\n            }\n\n            return Functions.sprintf(\n                '%s%sserver=%s' + argsep + 'db=%s' + argsep + 'table=%s',\n                sep,\n                common,\n                encodeURIComponent(this.get('server')),\n                encodeURIComponent(this.get('db')),\n                encodeURIComponent(this.get('table'))\n            );\n        }\n    };\n}());\n\n/**\n * Holds common parameters such as server, db, table, etc\n *\n * The content for this is normally loaded from Header.php or\n * Response.php and executed by ajax.js\n */\n// eslint-disable-next-line no-unused-vars\nvar CommonActions = {\n    /**\n     * Saves the database name when it's changed\n     * and reloads the query window, if necessary\n     *\n     * @param {string} newDb new_db The name of the new database\n     *\n     * @return {void}\n     */\n    setDb: function (newDb) {\n        if (newDb !== CommonParams.get('db')) {\n            CommonParams.setAll({ 'db': newDb, 'table': '' });\n        }\n    },\n    /**\n     * Opens a database in the main part of the page\n     *\n     * @param {string} newDb The name of the new database\n     *\n     * @return {void}\n     */\n    openDb: function (newDb) {\n        CommonParams\n            .set('db', newDb)\n            .set('table', '');\n        this.refreshMain(\n            CommonParams.get('opendb_url')\n        );\n    },\n    /**\n     * Refreshes the main frame\n     *\n     * @param {any} url Undefined to refresh to the same page\n     *                  String to go to a different page, e.g: 'index.php'\n     * @param {function | undefined} callback\n     *\n     * @return {void}\n     */\n    refreshMain: function (url, callback = undefined) {\n        var newUrl = url;\n        if (! newUrl) {\n            newUrl = $('#selflink').find('a').attr('href') || window.location.pathname;\n            newUrl = newUrl.substring(0, newUrl.indexOf('?'));\n        }\n        if (newUrl.indexOf('?') !== -1) {\n            newUrl += CommonParams.getUrlQuery(CommonParams.get('arg_separator'));\n        } else {\n            newUrl += CommonParams.getUrlQuery('?');\n        }\n        $('<a></a>', { href: newUrl })\n            .appendTo('body')\n            .trigger('click')\n            .remove();\n        if (typeof callback !== 'undefined') {\n            AJAX.callback = callback;\n        }\n    }\n};\n"],"names":["$","Functions","checkNumberOfFields","CommonParams","params","setAll","obj","updateNavigation","i","undefined","hasClass","Navigation","showCurrent","get","name","set","value","getUrlQuery","separator","sep","common","argsep","length","endsWith","sprintf","encodeURIComponent","CommonActions","setDb","newDb","openDb","refreshMain","url","callback","newUrl","find","attr","window","location","pathname","substring","indexOf","href","appendTo","trigger","remove","AJAX"],"sourceRoot":""}