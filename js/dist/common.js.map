{"version":3,"file":"common.js","mappings":"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","sources":["webpack://phpmyadmin/./js/src/common.js"],"sourcesContent":["\n$(function () {\n    Functions.checkNumberOfFields();\n});\n\n/**\n * Holds common parameters such as server, db, table, etc\n *\n * The content for this is normally loaded from Header.php or\n * Response.php and executed by ajax.js\n *\n * @test-module CommonParams\n */\nwindow.CommonParams = (function () {\n    /**\n     * @var {Object} params An associative array of key value pairs\n     * @access private\n     */\n    var params = {};\n    // The returned object is the public part of the module\n    return {\n        /**\n         * Saves all the key value pair that\n         * are provided in the input array\n         *\n         * @param obj hash The input array\n         *\n         * @return {void}\n         */\n        setAll: function (obj) {\n            var updateNavigation = false;\n            for (var i in obj) {\n                if (params[i] !== undefined && params[i] !== obj[i]) {\n                    if (i === 'db' || i === 'table') {\n                        updateNavigation = true;\n                    }\n                }\n                params[i] = obj[i];\n            }\n            if (updateNavigation &&\n                    $('#pma_navigation_tree').hasClass('synced')\n            ) {\n                Navigation.showCurrent();\n            }\n        },\n        /**\n         * Retrieves a value given its key\n         * Returns empty string for undefined values\n         *\n         * @param {string} name The key\n         *\n         * @return {string}\n         */\n        get: function (name) {\n            return params[name];\n        },\n        /**\n         * Saves a single key value pair\n         *\n         * @param {string} name  The key\n         * @param {string} value The value\n         *\n         * @return {CommonParams} For chainability\n         */\n        set: function (name, value) {\n            var updateNavigation = false;\n            if (name === 'db' || name === 'table' &&\n                params[name] !== value\n            ) {\n                updateNavigation = true;\n            }\n            params[name] = value;\n            if (updateNavigation &&\n                    $('#pma_navigation_tree').hasClass('synced')\n            ) {\n                Navigation.showCurrent();\n            }\n            return this;\n        },\n        /**\n         * Returns the url query string using the saved parameters\n         *\n         * @param {string} separator New separator\n         *\n         * @return {string}\n         */\n        getUrlQuery: function (separator) {\n            var sep = (typeof separator !== 'undefined') ? separator : '?';\n            var common = this.get('common_query');\n            var argsep = window.CommonParams.get('arg_separator');\n            if (typeof common === 'string' && common.length > 0) {\n                // If the last char is the separator, do not add it\n                // Else add it\n                common = common.endsWith(argsep) ? common : common + argsep;\n            }\n\n            return Functions.sprintf(\n                '%s%sserver=%s' + argsep + 'db=%s' + argsep + 'table=%s',\n                sep,\n                common,\n                encodeURIComponent(this.get('server')),\n                encodeURIComponent(this.get('db')),\n                encodeURIComponent(this.get('table'))\n            );\n        }\n    };\n}());\n\n/**\n * Holds common parameters such as server, db, table, etc\n *\n * The content for this is normally loaded from Header.php or\n * Response.php and executed by ajax.js\n */\nwindow.CommonActions = {\n    /**\n     * Saves the database name when it's changed\n     * and reloads the query window, if necessary\n     *\n     * @param {string} newDb new_db The name of the new database\n     *\n     * @return {void}\n     */\n    setDb: function (newDb) {\n        if (newDb !== window.CommonParams.get('db')) {\n            window.CommonParams.setAll({ 'db': newDb, 'table': '' });\n        }\n    },\n    /**\n     * Opens a database in the main part of the page\n     *\n     * @param {string} newDb The name of the new database\n     *\n     * @return {void}\n     */\n    openDb: function (newDb) {\n        window.CommonParams\n            .set('db', newDb)\n            .set('table', '');\n        this.refreshMain(\n            window.CommonParams.get('opendb_url')\n        );\n    },\n    /**\n     * Refreshes the main frame\n     *\n     * @param {any} url Undefined to refresh to the same page\n     *                  String to go to a different page, e.g: 'index.php'\n     * @param {function | undefined} callback\n     *\n     * @return {void}\n     */\n    refreshMain: function (url, callback = undefined) {\n        var newUrl = url;\n        if (! newUrl) {\n            newUrl = $('#selflink').find('a').attr('href') || window.location.pathname;\n            newUrl = newUrl.substring(0, newUrl.indexOf('?'));\n        }\n        if (newUrl.indexOf('?') !== -1) {\n            newUrl += window.CommonParams.getUrlQuery(window.CommonParams.get('arg_separator'));\n        } else {\n            newUrl += window.CommonParams.getUrlQuery('?');\n        }\n        $('<a></a>', { href: newUrl })\n            .appendTo('body')\n            .trigger('click')\n            .remove();\n        if (typeof callback !== 'undefined') {\n            window.AJAX.callback = callback;\n        }\n    }\n};\n"],"names":["$","Functions","checkNumberOfFields","window","CommonParams","params","setAll","obj","updateNavigation","i","undefined","hasClass","Navigation","showCurrent","get","name","set","value","getUrlQuery","separator","sep","common","argsep","length","endsWith","sprintf","encodeURIComponent","CommonActions","setDb","newDb","openDb","refreshMain","url","callback","newUrl","find","attr","location","pathname","substring","indexOf","href","appendTo","trigger","remove","AJAX"],"sourceRoot":""}