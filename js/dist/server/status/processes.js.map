{"version":3,"file":"server/status/processes.js","mappings":"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","sources":["webpack://phpmyadmin/external var \"jQuery\"","webpack://phpmyadmin/./js/src/server/status/processes.js"],"sourcesContent":["module.exports = jQuery;","import $ from 'jquery';\nimport { AJAX } from '../../modules/ajax.js';\nimport { CommonParams } from '../../modules/common.js';\nimport highlightSql from '../../modules/sql-highlight.js';\nimport { ajaxShowMessage } from '../../modules/ajax-message.js';\nimport { escapeHtml } from '../../modules/functions/escape.js';\nimport getImageTag from '../../modules/functions/getImageTag.js';\n\n/**\n * Server Status Processes\n *\n * @package PhpMyAdmin\n */\n\n// object to store process list state information\nvar processList = {\n\n    // denotes whether auto refresh is on or off\n    autoRefresh: false,\n    // stores the GET request which refresh process list\n    refreshRequest: null,\n    // stores the timeout id returned by setTimeout\n    refreshTimeout: null,\n    // the refresh interval in seconds\n    refreshInterval: null,\n    // the refresh URL (required to save last used option)\n    // i.e. full or sorting url\n    refreshUrl: null,\n\n    /**\n     * Handles killing of a process\n     *\n     * @return {void}\n     */\n    init: function () {\n        processList.setRefreshLabel();\n        if (processList.refreshUrl === null) {\n            processList.refreshUrl = 'index.php?route=/server/status/processes/refresh';\n        }\n        if (processList.refreshInterval === null) {\n            processList.refreshInterval = $('#id_refreshRate').val();\n        } else {\n            $('#id_refreshRate').val(processList.refreshInterval);\n        }\n    },\n\n    /**\n     * Handles killing of a process\n     *\n     * @param {object} event the event object\n     *\n     * @return {void}\n     */\n    killProcessHandler: function (event) {\n        event.preventDefault();\n        var argSep = CommonParams.get('arg_separator');\n        var params = $(this).getPostData();\n        params += argSep + 'ajax_request=1' + argSep + 'server=' + CommonParams.get('server');\n        // Get row element of the process to be killed.\n        var $tr = $(this).closest('tr');\n        $.post($(this).attr('href'), params, function (data) {\n            // Check if process was killed or not.\n            if (data.hasOwnProperty('success') && data.success) {\n                // remove the row of killed process.\n                $tr.remove();\n                // As we just removed a row, reapply odd-even classes\n                // to keep table stripes consistent\n                var $tableProcessListTr = $('#tableprocesslist').find('> tbody > tr');\n                $tableProcessListTr.each(function (index) {\n                    if (index >= 0 && index % 2 === 0) {\n                        $(this).removeClass('odd').addClass('even');\n                    } else if (index >= 0 && index % 2 !== 0) {\n                        $(this).removeClass('even').addClass('odd');\n                    }\n                });\n                // Show process killed message\n                ajaxShowMessage(data.message, false);\n            } else {\n                // Show process error message\n                ajaxShowMessage(data.error, false);\n            }\n        }, 'json');\n    },\n\n    /**\n     * Handles Auto Refreshing\n     * @return {void}\n     */\n    refresh: function () {\n        // abort any previous pending requests\n        // this is necessary, it may go into\n        // multiple loops causing unnecessary\n        // requests even after leaving the page.\n        processList.abortRefresh();\n        // if auto refresh is enabled\n        if (processList.autoRefresh) {\n            // Only fetch the table contents\n            processList.refreshUrl = 'index.php?route=/server/status/processes/refresh';\n            var interval = parseInt(processList.refreshInterval, 10) * 1000;\n            var urlParams = processList.getUrlParams();\n            processList.refreshRequest = $.post(processList.refreshUrl,\n                urlParams,\n                function (data) {\n                    if (data.hasOwnProperty('success') && data.success) {\n                        var $newTable = $(data.message);\n                        $('#tableprocesslist').html($newTable.html());\n                        highlightSql($('#tableprocesslist'));\n                    }\n                    processList.refreshTimeout = setTimeout(\n                        processList.refresh,\n                        interval\n                    );\n                });\n        }\n    },\n\n    /**\n     * Stop current request and clears timeout\n     *\n     * @return {void}\n     */\n    abortRefresh: function () {\n        if (processList.refreshRequest !== null) {\n            processList.refreshRequest.abort();\n            processList.refreshRequest = null;\n        }\n        clearTimeout(processList.refreshTimeout);\n    },\n\n    /**\n     * Set label of refresh button\n     * change between play & pause\n     *\n     * @return {void}\n     */\n    setRefreshLabel: function () {\n        var img = 'play';\n        var label = window.Messages.strStartRefresh;\n        if (processList.autoRefresh) {\n            img = 'pause';\n            label = window.Messages.strStopRefresh;\n            processList.refresh();\n        }\n        $('a#toggleRefresh').html(getImageTag(img) + escapeHtml(label));\n    },\n\n    /**\n     * Return the Url Parameters\n     * for autorefresh request,\n     * includes showExecuting if the filter is checked\n     *\n     * @return {object} urlParams - url parameters with autoRefresh request\n     */\n    getUrlParams: function () {\n        var urlParams = {\n            'server': CommonParams.get('server'),\n            'ajax_request': true,\n            'refresh': true,\n            'full': $('input[name=\"full\"]').val(),\n            'order_by_field': $('input[name=\"order_by_field\"]').val(),\n            'column_name': $('input[name=\"column_name\"]').val(),\n            'sort_order': $('input[name=\"sort_order\"]').val()\n        };\n        if ($('#showExecuting').is(':checked')) {\n            urlParams.showExecuting = true;\n            return urlParams;\n        }\n        return urlParams;\n    }\n};\n\nAJAX.registerOnload('server/status/processes.js', function () {\n    processList.init();\n    // Bind event handler for kill_process\n    $('#tableprocesslist').on(\n        'click',\n        'a.kill_process',\n        processList.killProcessHandler\n    );\n    // Bind event handler for toggling refresh of process list\n    $('a#toggleRefresh').on('click', function (event) {\n        event.preventDefault();\n        processList.autoRefresh = ! processList.autoRefresh;\n        processList.setRefreshLabel();\n    });\n    // Bind event handler for change in refresh rate\n    $('#id_refreshRate').on('change', function () {\n        processList.refreshInterval = $(this).val();\n        processList.refresh();\n    });\n    // Bind event handler for table header links\n    $('#tableprocesslist').on('click', 'thead a', function () {\n        processList.refreshUrl = $(this).attr('href');\n    });\n});\n\n/**\n * Unbind all event handlers before tearing down a page\n */\nAJAX.registerTeardown('server/status/processes.js', function () {\n    $('#tableprocesslist').off('click', 'a.kill_process');\n    $('a#toggleRefresh').off('click');\n    $('#id_refreshRate').off('change');\n    $('#tableprocesslist').off('click', 'thead a');\n    // stop refreshing further\n    processList.abortRefresh();\n});\n"],"names":["$","AJAX","CommonParams","highlightSql","ajaxShowMessage","escapeHtml","getImageTag","processList","autoRefresh","refreshRequest","refreshTimeout","refreshInterval","refreshUrl","init","setRefreshLabel","val","killProcessHandler","event","preventDefault","argSep","get","params","getPostData","$tr","closest","post","attr","data","hasOwnProperty","success","remove","$tableProcessListTr","find","each","index","removeClass","addClass","message","error","refresh","abortRefresh","interval","parseInt","urlParams","getUrlParams","$newTable","html","setTimeout","abort","clearTimeout","img","label","window","Messages","strStartRefresh","strStopRefresh","is","showExecuting","registerOnload","on","registerTeardown","off"],"sourceRoot":""}