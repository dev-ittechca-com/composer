{"version":3,"file":"server/status/processes.js","mappings":"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","sources":["webpack://phpmyadmin/external var \"jQuery\"","webpack://phpmyadmin/./js/src/server/status/processes.js"],"sourcesContent":["module.exports = jQuery;","import $ from 'jquery';\nimport { AJAX } from '../../modules/ajax.js';\nimport { CommonParams } from '../../modules/common.js';\nimport highlightSql from '../../modules/sql-highlight.js';\nimport { ajaxShowMessage } from '../../modules/ajax-message.js';\nimport { escapeHtml } from '../../modules/functions/escape.js';\nimport getImageTag from '../../modules/functions/getImageTag.js';\n\n/**\n * Server Status Processes\n *\n * @package PhpMyAdmin\n */\n\n// object to store process list state information\nvar processList = {\n\n    // denotes whether auto refresh is on or off\n    autoRefresh: false,\n    // stores the GET request which refresh process list\n    refreshRequest: null,\n    // stores the timeout id returned by setTimeout\n    refreshTimeout: null,\n    // the refresh interval in seconds\n    refreshInterval: null,\n    // the refresh URL (required to save last used option)\n    // i.e. full or sorting url\n    refreshUrl: null,\n\n    /**\n     * Handles killing of a process\n     *\n     * @return {void}\n     */\n    init: function () {\n        processList.setRefreshLabel();\n        if (processList.refreshUrl === null) {\n            processList.refreshUrl = 'index.php?route=/server/status/processes/refresh';\n        }\n        if (processList.refreshInterval === null) {\n            processList.refreshInterval = $('#id_refreshRate').val();\n        } else {\n            $('#id_refreshRate').val(processList.refreshInterval);\n        }\n    },\n\n    /**\n     * Handles killing of a process\n     *\n     * @param {object} event the event object\n     *\n     * @return {void}\n     */\n    killProcessHandler: function (event) {\n        event.preventDefault();\n        var argSep = CommonParams.get('arg_separator');\n        var params = $(this).getPostData();\n        params += argSep + 'ajax_request=1' + argSep + 'server=' + CommonParams.get('server');\n        // Get row element of the process to be killed.\n        var $tr = $(this).closest('tr');\n        $.post($(this).attr('href'), params, function (data) {\n            // Check if process was killed or not.\n            if (data.hasOwnProperty('success') && data.success) {\n                // remove the row of killed process.\n                $tr.remove();\n                // As we just removed a row, reapply odd-even classes\n                // to keep table stripes consistent\n                var $tableProcessListTr = $('#tableprocesslist').find('> tbody > tr');\n                $tableProcessListTr.each(function (index) {\n                    if (index >= 0 && index % 2 === 0) {\n                        $(this).removeClass('odd').addClass('even');\n                    } else if (index >= 0 && index % 2 !== 0) {\n                        $(this).removeClass('even').addClass('odd');\n                    }\n                });\n                // Show process killed message\n                ajaxShowMessage(data.message, false);\n            } else {\n                // Show process error message\n                ajaxShowMessage(data.error, false);\n            }\n        }, 'json');\n    },\n\n    /**\n     * Handles Auto Refreshing\n     * @return {void}\n     */\n    refresh: function () {\n        // abort any previous pending requests\n        // this is necessary, it may go into\n        // multiple loops causing unnecessary\n        // requests even after leaving the page.\n        processList.abortRefresh();\n        // if auto refresh is enabled\n        if (processList.autoRefresh) {\n            // Only fetch the table contents\n            processList.refreshUrl = 'index.php?route=/server/status/processes/refresh';\n            var interval = parseInt(processList.refreshInterval, 10) * 1000;\n            var urlParams = processList.getUrlParams();\n            processList.refreshRequest = $.post(processList.refreshUrl,\n                urlParams,\n                function (data) {\n                    if (data.hasOwnProperty('success') && data.success) {\n                        var $newTable = $(data.message);\n                        $('#tableprocesslist').html($newTable.html());\n                        highlightSql($('#tableprocesslist'));\n                    }\n                    processList.refreshTimeout = setTimeout(\n                        processList.refresh,\n                        interval\n                    );\n                });\n        }\n    },\n\n    /**\n     * Stop current request and clears timeout\n     *\n     * @return {void}\n     */\n    abortRefresh: function () {\n        if (processList.refreshRequest !== null) {\n            processList.refreshRequest.abort();\n            processList.refreshRequest = null;\n        }\n        clearTimeout(processList.refreshTimeout);\n    },\n\n    /**\n     * Set label of refresh button\n     * change between play & pause\n     *\n     * @return {void}\n     */\n    setRefreshLabel: function () {\n        var img = 'play';\n        var label = window.Messages.strStartRefresh;\n        if (processList.autoRefresh) {\n            img = 'pause';\n            label = window.Messages.strStopRefresh;\n            processList.refresh();\n        }\n        $('a#toggleRefresh').html(getImageTag(img) + escapeHtml(label));\n    },\n\n    /**\n     * Return the Url Parameters\n     * for autorefresh request,\n     * includes showExecuting if the filter is checked\n     *\n     * @return {object} urlParams - url parameters with autoRefresh request\n     */\n    getUrlParams: function () {\n        var urlParams = {\n            'server': CommonParams.get('server'),\n            'ajax_request': true,\n            'refresh': true,\n            'full': $('input[name=\"full\"]').val(),\n            'order_by_field': $('input[name=\"order_by_field\"]').val(),\n            'column_name': $('input[name=\"column_name\"]').val(),\n            'sort_order': $('input[name=\"sort_order\"]').val()\n        };\n        if ($('#showExecuting').is(':checked')) {\n            urlParams.showExecuting = true;\n            return urlParams;\n        }\n        return urlParams;\n    }\n};\n\nAJAX.registerOnload('server/status/processes.js', function () {\n    processList.init();\n    // Bind event handler for kill_process\n    $('#tableprocesslist').on(\n        'click',\n        'a.kill_process',\n        processList.killProcessHandler\n    );\n    // Bind event handler for toggling refresh of process list\n    $('a#toggleRefresh').on('click', function (event) {\n        event.preventDefault();\n        processList.autoRefresh = ! processList.autoRefresh;\n        processList.setRefreshLabel();\n    });\n    // Bind event handler for change in refresh rate\n    $('#id_refreshRate').on('change', function () {\n        processList.refreshInterval = $(this).val();\n        processList.refresh();\n    });\n    // Bind event handler for table header links\n    $('#tableprocesslist').on('click', 'thead a', function () {\n        processList.refreshUrl = $(this).attr('href');\n    });\n});\n\n/**\n * Unbind all event handlers before tearing down a page\n */\nAJAX.registerTeardown('server/status/processes.js', function () {\n    $('#tableprocesslist').off('click', 'a.kill_process');\n    $('a#toggleRefresh').off('click');\n    $('#id_refreshRate').off('change');\n    $('#tableprocesslist').off('click', 'thead a');\n    // stop refreshing further\n    processList.abortRefresh();\n});\n"],"names":["$","AJAX","CommonParams","highlightSql","ajaxShowMessage","escapeHtml","getImageTag","processList","autoRefresh","refreshRequest","refreshTimeout","refreshInterval","refreshUrl","init","setRefreshLabel","val","killProcessHandler","event","preventDefault","argSep","get","params","getPostData","$tr","closest","post","attr","data","hasOwnProperty","success","remove","$tableProcessListTr","find","each","index","removeClass","addClass","message","error","refresh","abortRefresh","interval","parseInt","urlParams","getUrlParams","$newTable","html","setTimeout","abort","clearTimeout","img","label","window","Messages","strStartRefresh","strStopRefresh","is","showExecuting","registerOnload","on","registerTeardown","off"],"sourceRoot":""}