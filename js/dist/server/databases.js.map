{"version":3,"file":"server/databases.js","mappings":"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","sources":["webpack://phpmyadmin/./js/src/server/databases.js"],"sourcesContent":["/**\n * @implements EventListener\n */\nconst DropDatabases = {\n    /**\n     * @param {Event} event\n     */\n    handleEvent: function (event) {\n        event.preventDefault();\n\n        var $form = $(this);\n\n        /**\n         * @var selected_dbs Array containing the names of the checked databases\n         */\n        var selectedDbs = [];\n        // loop over all checked checkboxes, except the .checkall_box checkbox\n        $form.find('input:checkbox:checked:not(.checkall_box)').each(function () {\n            $(this).closest('tr').addClass('removeMe');\n            selectedDbs[selectedDbs.length] = 'DROP DATABASE `' + Functions.escapeHtml($(this).val()) + '`;';\n        });\n        if (! selectedDbs.length) {\n            Functions.ajaxShowMessage(\n                $('<div class=\"alert alert-warning\" role=\"alert\"></div>').text(\n                    Messages.strNoDatabasesSelected\n                ),\n                2000\n            );\n            return;\n        }\n        /**\n         * @var question    String containing the question to be asked for confirmation\n         */\n        var question = Messages.strDropDatabaseStrongWarning + ' ' +\n            Functions.sprintf(Messages.strDoYouReally, selectedDbs.join('<br>'));\n\n        const modal = $('#dropDatabaseModal');\n        modal.find('.modal-body').html(question);\n        modal.modal('show');\n\n        const url = 'index.php?route=/server/databases/destroy&' + $(this).serialize();\n\n        $('#dropDatabaseModalDropButton').on('click', function () {\n            Functions.ajaxShowMessage(Messages.strProcessingRequest, false);\n\n            var parts = url.split('?');\n            var params = Functions.getJsConfirmCommonParam(this, parts[1]);\n\n            $.post(parts[0], params, function (data) {\n                if (typeof data !== 'undefined' && data.success === true) {\n                    Functions.ajaxShowMessage(data.message);\n\n                    var $rowsToRemove = $form.find('tr.removeMe');\n                    var $databasesCount = $('#filter-rows-count');\n                    var newCount = parseInt($databasesCount.text(), 10) - $rowsToRemove.length;\n                    $databasesCount.text(newCount);\n\n                    $rowsToRemove.remove();\n                    $form.find('tbody').sortTable('.name');\n                    if ($form.find('tbody').find('tr').length === 0) {\n                        // user just dropped the last db on this page\n                        CommonActions.refreshMain();\n                    }\n                    Navigation.reload();\n                } else {\n                    $form.find('tr.removeMe').removeClass('removeMe');\n                    Functions.ajaxShowMessage(data.error, false);\n                }\n            });\n\n            modal.modal('hide');\n            $('#dropDatabaseModalDropButton').off('click');\n        });\n    }\n};\n\n/**\n * @implements EventListener\n */\nconst CreateDatabase = {\n    /**\n     * @param {Event} event\n     */\n    handleEvent: function (event) {\n        event.preventDefault();\n\n        var $form = $(this);\n\n        // TODO Remove this section when all browsers support HTML5 \"required\" property\n        var newDbNameInput = $form.find('input[name=new_db]');\n        if (newDbNameInput.val() === '') {\n            newDbNameInput.trigger('focus');\n            alert(Messages.strFormEmpty);\n            return;\n        }\n        // end remove\n\n        Functions.ajaxShowMessage(Messages.strProcessingRequest);\n        Functions.prepareForAjaxRequest($form);\n\n        $.post($form.attr('action'), $form.serialize(), function (data) {\n            if (typeof data !== 'undefined' && data.success === true) {\n                Functions.ajaxShowMessage(data.message);\n\n                var $databasesCountObject = $('#filter-rows-count');\n                var databasesCount = parseInt($databasesCountObject.text(), 10) + 1;\n                $databasesCountObject.text(databasesCount);\n                Navigation.reload();\n\n                // make ajax request to load db structure page - taken from ajax.js\n                var dbStructUrl = data.url;\n                dbStructUrl = dbStructUrl.replace(/amp;/ig, '');\n                var params = 'ajax_request=true' + CommonParams.get('arg_separator') + 'ajax_page_request=true';\n                $.get(dbStructUrl, params, AJAX.responseHandler);\n            } else {\n                Functions.ajaxShowMessage(data.error, false);\n            }\n        });\n    }\n};\n\nfunction checkPrivilegesForDatabase () {\n    var tableRows = $('.server_databases');\n    $.each(tableRows, function () {\n        $(this).on('click', function () {\n            CommonActions.setDb($(this).attr('data'));\n        });\n    });\n}\n\nAJAX.registerTeardown('server/databases.js', function () {\n    $(document).off('submit', '#dbStatsForm');\n    $(document).off('submit', '#create_database_form.ajax');\n});\n\nAJAX.registerOnload('server/databases.js', function () {\n    $(document).on('submit', '#dbStatsForm', DropDatabases.handleEvent);\n    $(document).on('submit', '#create_database_form.ajax', CreateDatabase.handleEvent);\n    checkPrivilegesForDatabase();\n});\n"],"names":["DropDatabases","handleEvent","event","preventDefault","$form","$","selectedDbs","find","each","closest","addClass","length","Functions","escapeHtml","val","ajaxShowMessage","text","Messages","strNoDatabasesSelected","question","strDropDatabaseStrongWarning","sprintf","strDoYouReally","join","modal","html","url","serialize","on","strProcessingRequest","parts","split","params","getJsConfirmCommonParam","post","data","success","message","$rowsToRemove","$databasesCount","newCount","parseInt","remove","sortTable","CommonActions","refreshMain","Navigation","reload","removeClass","error","off","CreateDatabase","newDbNameInput","trigger","alert","strFormEmpty","prepareForAjaxRequest","attr","$databasesCountObject","databasesCount","dbStructUrl","replace","CommonParams","get","AJAX","responseHandler","checkPrivilegesForDatabase","tableRows","setDb","registerTeardown","document","registerOnload"],"sourceRoot":""}