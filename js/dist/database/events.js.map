{"version":3,"file":"database/events.js","mappings":"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","sources":["webpack://phpmyadmin/./js/src/database/events.js"],"sourcesContent":["AJAX.registerTeardown('database/events.js', function () {\n    $(document).off('click', 'a.ajax.add_anchor, a.ajax.edit_anchor');\n    $(document).off('click', 'a.ajax.export_anchor');\n    $(document).off('click', '#bulkActionExportButton');\n    $(document).off('click', 'a.ajax.drop_anchor');\n    $(document).off('click', '#bulkActionDropButton');\n    $(document).off('change', 'select[name=item_type]');\n});\n\nconst DatabaseEvents = {\n    /**\n     * @var $ajaxDialog Query object containing the reference to the\n     *                  dialog that contains the editor\n     */\n    $ajaxDialog: null,\n    /**\n     * @var syntaxHiglighter Reference to the codemirror editor\n     */\n    syntaxHiglighter: null,\n    /**\n     * @var buttonOptions Object containing options for\n     *                    the jQueryUI dialog buttons\n     */\n    buttonOptions: {},\n    /**\n     * Validate editor form fields.\n     *\n     * @return {bool}\n     */\n    validate: function () {\n        /**\n         * @var $elm a jQuery object containing the reference\n         *           to an element that is being validated\n         */\n        var $elm = null;\n        // Common validation. At the very least the name\n        // and the definition must be provided for an item\n        $elm = $('table.rte_table').last().find('input[name=item_name]');\n        if ($elm.val() === '') {\n            $elm.trigger('focus');\n            alert(Messages.strFormEmpty);\n            return false;\n        }\n        $elm = $('table.rte_table').find('textarea[name=item_definition]');\n        if ($elm.val() === '') {\n            if (this.syntaxHiglighter !== null) {\n                this.syntaxHiglighter.focus();\n            } else {\n                $('textarea[name=item_definition]').last().trigger('focus');\n            }\n            alert(Messages.strFormEmpty);\n            return false;\n        }\n        // The validation has so far passed, so now\n        // we can validate item-specific fields.\n        return this.validateCustom();\n    },\n\n    exportDialog: function ($this) {\n        var $msg = Functions.ajaxShowMessage();\n        if ($this.attr('id') === 'bulkActionExportButton') {\n            var combined = {\n                success: true,\n                title: Messages.strExport,\n                message: '',\n                error: ''\n            };\n            // export anchors of all selected rows\n            var exportAnchors = $('input.checkall:checked').parents('tr').find('.export_anchor');\n            var count = exportAnchors.length;\n            var returnCount = 0;\n            var p = $.when();\n            exportAnchors.each(function () {\n                var h = $(this).attr('href');\n                p = p.then(function () {\n                    return $.get(h, { 'ajax_request': true }, function (data) {\n                        returnCount++;\n                        if (data.success === true) {\n                            combined.message += '\\n' + data.message + '\\n';\n                            if (returnCount === count) {\n                                showExport(combined);\n                            }\n                        } else {\n                            // complain even if one export is failing\n                            combined.success = false;\n                            combined.error += '\\n' + data.error + '\\n';\n                            if (returnCount === count) {\n                                showExport(combined);\n                            }\n                        }\n                    });\n                });\n            });\n        } else {\n            $.get($this.attr('href'), { 'ajax_request': true }, showExport);\n        }\n        Functions.ajaxRemoveMessage($msg);\n\n        function showExport (data) {\n            if (data.success === true) {\n                Functions.ajaxRemoveMessage($msg);\n                /**\n                 * @var button_options Object containing options\n                 *                     for jQueryUI dialog buttons\n                 */\n                var buttonOptions = {};\n                buttonOptions[Messages.strClose] = function () {\n                    $(this).dialog('close').remove();\n                };\n                /**\n                 * Display the dialog to the user\n                 */\n                data.message = '<textarea cols=\"40\" rows=\"15\" class=\"w-100\">' + data.message + '</textarea>';\n                var $ajaxDialog = $('<div>' + data.message + '</div>').dialog({\n                    width: 500,\n                    buttons: buttonOptions,\n                    title: data.title\n                });\n                // Attach syntax highlighted editor to export dialog\n                /**\n                 * @var $elm jQuery object containing the reference\n                 *           to the Export textarea.\n                 */\n                var $elm = $ajaxDialog.find('textarea');\n                Functions.getSqlEditor($elm);\n            } else {\n                Functions.ajaxShowMessage(data.error, false);\n            }\n        } // end showExport()\n    },  // end exportDialog()\n    editorDialog: function (isNew, $this) {\n        var that = this;\n        /**\n         * @var $edit_row jQuery object containing the reference to\n         *                the row of the the item being edited\n         *                from the list of items\n         */\n        var $editRow = null;\n        if ($this.hasClass('edit_anchor')) {\n            // Remember the row of the item being edited for later,\n            // so that if the edit is successful, we can replace the\n            // row with info about the modified item.\n            $editRow = $this.parents('tr');\n        }\n        /**\n         * @var $msg jQuery object containing the reference to\n         *           the AJAX message shown to the user\n         */\n        var $msg = Functions.ajaxShowMessage();\n        $.get($this.attr('href'), { 'ajax_request': true }, function (data) {\n            if (data.success === true) {\n                // We have successfully fetched the editor form\n                Functions.ajaxRemoveMessage($msg);\n                // Now define the function that is called when\n                // the user presses the \"Go\" button\n                that.buttonOptions[Messages.strGo] = function () {\n                    // Move the data from the codemirror editor back to the\n                    // textarea, where it can be used in the form submission.\n                    if (typeof CodeMirror !== 'undefined') {\n                        that.syntaxHiglighter.save();\n                    }\n                    // Validate editor and submit request, if passed.\n                    if (that.validate()) {\n                        /**\n                         * @var data Form data to be sent in the AJAX request\n                         */\n                        var data = $('form.rte_form').last().serialize();\n                        $msg = Functions.ajaxShowMessage(\n                            Messages.strProcessingRequest\n                        );\n                        var url = $('form.rte_form').last().attr('action');\n                        $.post(url, data, function (data) {\n                            if (data.success === true) {\n                                // Item created successfully\n                                Functions.ajaxRemoveMessage($msg);\n                                Functions.slidingMessage(data.message);\n                                that.$ajaxDialog.dialog('close');\n                                // If we are in 'edit' mode, we must\n                                // remove the reference to the old row.\n                                if (mode === 'edit' && $editRow !== null) {\n                                    $editRow.remove();\n                                }\n                                // Sometimes, like when moving a trigger from\n                                // a table to another one, the new row should\n                                // not be inserted into the list. In this case\n                                // \"data.insert\" will be set to false.\n                                if (data.insert) {\n                                    // Insert the new row at the correct\n                                    // location in the list of items\n                                    /**\n                                     * @var text Contains the name of an item from\n                                     *           the list that is used in comparisons\n                                     *           to find the correct location where\n                                     *           to insert a new row.\n                                     */\n                                    var text = '';\n                                    /**\n                                     * @var inserted Whether a new item has been\n                                     *               inserted in the list or not\n                                     */\n                                    var inserted = false;\n                                    $('table.data').find('tr').each(function () {\n                                        text = $(this)\n                                            .children('td')\n                                            .eq(0)\n                                            .find('strong')\n                                            .text()\n                                            .toUpperCase()\n                                            .trim();\n                                        if (text !== '' && text > data.name) {\n                                            $(this).before(data.new_row);\n                                            inserted = true;\n                                            return false;\n                                        }\n                                    });\n                                    if (! inserted) {\n                                        // If we didn't manage to insert the row yet,\n                                        // it must belong at the end of the list,\n                                        // so we insert it there.\n                                        $('table.data').append(data.new_row);\n                                    }\n                                    // Fade-in the new row\n                                    $('tr.ajaxInsert')\n                                        .show('slow')\n                                        .removeClass('ajaxInsert');\n                                } else if ($('table.data').find('tr').has('td').length === 0) {\n                                    // If we are not supposed to insert the new row,\n                                    // we will now check if the table is empty and\n                                    // needs to be hidden. This will be the case if\n                                    // we were editing the only item in the list,\n                                    // which we removed and will not be inserting\n                                    // something else in its place.\n                                    $('table.data').hide('slow', function () {\n                                        $('#nothing2display').show('slow');\n                                    });\n                                }\n                                // Now we have inserted the row at the correct\n                                // position, but surely at least some row classes\n                                // are wrong now. So we will iterate through\n                                // all rows and assign correct classes to them\n                                /**\n                                 * @var ct Count of processed rows\n                                 */\n                                var ct = 0;\n                                /**\n                                 * @var rowclass Class to be attached to the row\n                                 *               that is being processed\n                                 */\n                                var rowclass = '';\n                                $('table.data').find('tr').has('td').each(function () {\n                                    rowclass = (ct % 2 === 0) ? 'odd' : 'even';\n                                    $(this).removeClass().addClass(rowclass);\n                                    ct++;\n                                });\n                                // If this is the first item being added, remove\n                                // the \"No items\" message and show the list.\n                                if ($('table.data').find('tr').has('td').length > 0 &&\n                                    $('#nothing2display').is(':visible')\n                                ) {\n                                    $('#nothing2display').hide('slow', function () {\n                                        $('table.data').show('slow');\n                                    });\n                                }\n                                Navigation.reload();\n                            } else {\n                                Functions.ajaxShowMessage(data.error, false);\n                            }\n                        }); // end $.post()\n                    } // end \"if (that.validate())\"\n                }; // end of function that handles the submission of the Editor\n                that.buttonOptions[Messages.strClose] = function () {\n                    $(this).dialog('close');\n                };\n                /**\n                 * Display the dialog to the user\n                 */\n                that.$ajaxDialog = $('<div id=\"rteDialog\">' + data.message + '</div>').dialog({\n                    width: 700,\n                    minWidth: 500,\n                    buttons: that.buttonOptions,\n                    // Issue #15810 - use button titles for modals (eg: new procedure)\n                    // Respect the order: title on href tag, href content, title sent in response\n                    title: $this.attr('title') || $this.text() || $(data.title).text(),\n                    modal: true,\n                    open: function () {\n                        $('#rteDialog').dialog('option', 'max-height', $(window).height());\n                        if ($('#rteDialog').parents('.ui-dialog').height() > $(window).height()) {\n                            $('#rteDialog').dialog('option', 'height', $(window).height());\n                        }\n                        $(this).find('input[name=item_name]').trigger('focus');\n                        $(this).find('input.datefield').each(function () {\n                            Functions.addDatepicker($(this).css('width', '95%'), 'date');\n                        });\n                        $(this).find('input.datetimefield').each(function () {\n                            Functions.addDatepicker($(this).css('width', '95%'), 'datetime');\n                        });\n                        $.datepicker.initialized = false;\n                    },\n                    close: function () {\n                        $(this).remove();\n                    }\n                });\n                /**\n                 * @var mode Used to remember whether the editor is in\n                 *           \"Edit\" or \"Add\" mode\n                 */\n                var mode = 'add';\n                if ($('input[name=editor_process_edit]').length > 0) {\n                    mode = 'edit';\n                }\n                // Attach syntax highlighted editor to the definition\n                /**\n                 * @var elm jQuery object containing the reference to\n                 *                 the Definition textarea.\n                 */\n                var $elm = $('textarea[name=item_definition]').last();\n                var linterOptions = {};\n                linterOptions.eventEditor = true;\n                that.syntaxHiglighter = Functions.getSqlEditor($elm, {}, 'both', linterOptions);\n            } else {\n                Functions.ajaxShowMessage(data.error, false);\n            }\n        }); // end $.get()\n    },\n\n    dropDialog: function ($this) {\n        /**\n         * @var $curr_row Object containing reference to the current row\n         */\n        var $currRow = $this.parents('tr');\n        /**\n         * @var question String containing the question to be asked for confirmation\n         */\n        var question = $('<div></div>').text(\n            $currRow.children('td').children('.drop_sql').html()\n        );\n        // We ask for confirmation first here, before submitting the ajax request\n        $this.confirm(question, $this.attr('href'), function (url) {\n            /**\n             * @var msg jQuery object containing the reference to\n             *          the AJAX message shown to the user\n             */\n            var $msg = Functions.ajaxShowMessage(Messages.strProcessingRequest);\n            var params = Functions.getJsConfirmCommonParam(this, $this.getPostData());\n            $.post(url, params, function (data) {\n                if (data.success === true) {\n                    /**\n                     * @var $table Object containing reference\n                     *             to the main list of elements\n                     */\n                    var $table = $currRow.parent();\n                    // Check how many rows will be left after we remove\n                    // the one that the user has requested us to remove\n                    if ($table.find('tr').length === 3) {\n                        // If there are two rows left, it means that they are\n                        // the header of the table and the rows that we are\n                        // about to remove, so after the removal there will be\n                        // nothing to show in the table, so we hide it.\n                        $table.hide('slow', function () {\n                            $(this).find('tr.even, tr.odd').remove();\n                            $('.withSelected').remove();\n                            $('#nothing2display').show('slow');\n                        });\n                    } else {\n                        $currRow.hide('slow', function () {\n                            $(this).remove();\n                            // Now we have removed the row from the list, but maybe\n                            // some row classes are wrong now. So we will iterate\n                            // through all rows and assign correct classes to them.\n                            /**\n                             * @var ct Count of processed rows\n                             */\n                            var ct = 0;\n                            /**\n                             * @var rowclass Class to be attached to the row\n                             *               that is being processed\n                             */\n                            var rowclass = '';\n                            $table.find('tr').has('td').each(function () {\n                                rowclass = (ct % 2 === 1) ? 'odd' : 'even';\n                                $(this).removeClass().addClass(rowclass);\n                                ct++;\n                            });\n                        });\n                    }\n                    // Get rid of the \"Loading\" message\n                    Functions.ajaxRemoveMessage($msg);\n                    // Show the query that we just executed\n                    Functions.slidingMessage(data.sql_query);\n                    Navigation.reload();\n                } else {\n                    Functions.ajaxShowMessage(data.error, false);\n                }\n            }); // end $.post()\n        });\n    },\n\n    dropMultipleDialog: function ($this) {\n        // We ask for confirmation here\n        $this.confirm(Messages.strDropRTEitems, '', function () {\n            /**\n             * @var msg jQuery object containing the reference to\n             *          the AJAX message shown to the user\n             */\n            var $msg = Functions.ajaxShowMessage(Messages.strProcessingRequest);\n\n            // drop anchors of all selected rows\n            var dropAnchors = $('input.checkall:checked').parents('tr').find('.drop_anchor');\n            var success = true;\n            var count = dropAnchors.length;\n            var returnCount = 0;\n\n            dropAnchors.each(function () {\n                var $anchor = $(this);\n                /**\n                 * @var $curr_row Object containing reference to the current row\n                 */\n                var $currRow = $anchor.parents('tr');\n                var params = Functions.getJsConfirmCommonParam(this, $anchor.getPostData());\n                $.post($anchor.attr('href'), params, function (data) {\n                    returnCount++;\n                    if (data.success === true) {\n                        /**\n                         * @var $table Object containing reference\n                         *             to the main list of elements\n                         */\n                        var $table = $currRow.parent();\n                        // Check how many rows will be left after we remove\n                        // the one that the user has requested us to remove\n                        if ($table.find('tr').length === 3) {\n                            // If there are two rows left, it means that they are\n                            // the header of the table and the rows that we are\n                            // about to remove, so after the removal there will be\n                            // nothing to show in the table, so we hide it.\n                            $table.hide('slow', function () {\n                                $(this).find('tr.even, tr.odd').remove();\n                                $('.withSelected').remove();\n                                $('#nothing2display').show('slow');\n                            });\n                        } else {\n                            $currRow.hide('fast', function () {\n                                // we will iterate\n                                // through all rows and assign correct classes to them.\n                                /**\n                                 * @var ct Count of processed rows\n                                 */\n                                var ct = 0;\n                                /**\n                                 * @var rowclass Class to be attached to the row\n                                 *               that is being processed\n                                 */\n                                var rowclass = '';\n                                $table.find('tr').has('td').each(function () {\n                                    rowclass = (ct % 2 === 1) ? 'odd' : 'even';\n                                    $(this).removeClass().addClass(rowclass);\n                                    ct++;\n                                });\n                            });\n                            $currRow.remove();\n                        }\n                        if (returnCount === count) {\n                            if (success) {\n                                // Get rid of the \"Loading\" message\n                                Functions.ajaxRemoveMessage($msg);\n                                $('#rteListForm_checkall').prop({ checked: false, indeterminate: false });\n                            }\n                            Navigation.reload();\n                        }\n                    } else {\n                        Functions.ajaxShowMessage(data.error, false);\n                        success = false;\n                        if (returnCount === count) {\n                            Navigation.reload();\n                        }\n                    }\n                }); // end $.post()\n            }); // end drop_anchors.each()\n        });\n    },\n    /**\n     * Validate custom editor form fields.\n     *\n     * @return {bool}\n     */\n    validateCustom: function () {\n        /**\n         * @var elm a jQuery object containing the reference\n         *          to an element that is being validated\n         */\n        var $elm = null;\n        if (this.$ajaxDialog.find('select[name=item_type]').find(':selected').val() === 'RECURRING') {\n            // The interval field must not be empty for recurring events\n            $elm = this.$ajaxDialog.find('input[name=item_interval_value]');\n            if ($elm.val() === '') {\n                $elm.trigger('focus');\n                alert(Messages.strFormEmpty);\n                return false;\n            }\n        } else {\n            // The execute_at field must not be empty for \"once off\" events\n            $elm = this.$ajaxDialog.find('input[name=item_execute_at]');\n            if ($elm.val() === '') {\n                $elm.trigger('focus');\n                alert(Messages.strFormEmpty);\n                return false;\n            }\n        }\n        return true;\n    }\n};\n\nAJAX.registerOnload('database/events.js', function () {\n    /**\n     * Attach Ajax event handlers for the Add/Edit functionality.\n     */\n    $(document).on('click', 'a.ajax.add_anchor, a.ajax.edit_anchor', function (event) {\n        event.preventDefault();\n\n        if ($(this).hasClass('add_anchor')) {\n            $.datepicker.initialized = false;\n        }\n\n        DatabaseEvents.editorDialog($(this).hasClass('add_anchor'), $(this));\n    });\n\n    /**\n     * Attach Ajax event handlers for Export\n     */\n    $(document).on('click', 'a.ajax.export_anchor', function (event) {\n        event.preventDefault();\n        DatabaseEvents.exportDialog($(this));\n    }); // end $(document).on()\n\n    $(document).on('click', '#bulkActionExportButton', function (event) {\n        event.preventDefault();\n        DatabaseEvents.exportDialog($(this));\n    }); // end $(document).on()\n\n    /**\n     * Attach Ajax event handlers for Drop functionality\n     */\n    $(document).on('click', 'a.ajax.drop_anchor', function (event) {\n        event.preventDefault();\n        DatabaseEvents.dropDialog($(this));\n    }); // end $(document).on()\n\n    $(document).on('click', '#bulkActionDropButton', function (event) {\n        event.preventDefault();\n        DatabaseEvents.dropMultipleDialog($(this));\n    }); // end $(document).on()\n\n    /**\n     * Attach Ajax event handlers for the \"Change event type\" functionality, so that the correct\n     * rows are shown in the editor when changing the event type\n     */\n    $(document).on('change', 'select[name=item_type]', function () {\n        $(this).closest('table').find('tr.recurring_event_row, tr.onetime_event_row').toggle();\n    });\n});\n"],"names":["AJAX","registerTeardown","$","document","off","DatabaseEvents","$ajaxDialog","syntaxHiglighter","buttonOptions","validate","$elm","last","find","val","trigger","alert","Messages","strFormEmpty","focus","validateCustom","exportDialog","$this","$msg","Functions","ajaxShowMessage","attr","combined","success","title","strExport","message","error","exportAnchors","parents","count","length","returnCount","p","when","each","h","then","get","data","showExport","ajaxRemoveMessage","strClose","dialog","remove","width","buttons","getSqlEditor","editorDialog","isNew","that","$editRow","hasClass","strGo","CodeMirror","save","serialize","strProcessingRequest","url","post","slidingMessage","mode","insert","text","inserted","children","eq","toUpperCase","trim","name","before","new_row","append","show","removeClass","has","hide","ct","rowclass","addClass","is","Navigation","reload","minWidth","modal","open","window","height","addDatepicker","css","datepicker","initialized","close","linterOptions","eventEditor","dropDialog","$currRow","question","html","confirm","params","getJsConfirmCommonParam","getPostData","$table","parent","sql_query","dropMultipleDialog","strDropRTEitems","dropAnchors","$anchor","prop","checked","indeterminate","registerOnload","on","event","preventDefault","closest","toggle"],"sourceRoot":""}